module.exports = function (RED) {
    function pti816dataNode(config) {
        RED.nodes.createNode(this, config);
        var node = this;
        node.on("input", function (msg) {
            const data = msg.payload;
            //按分行符分割数据
            const lines = data.split('\n').map(line => line.trim());
            const result = {};
            const custom = [];
            const boards = [];
            //按等号分割成key：value
            lines.forEach(line => {
                const [key, value] = line.split(' = ');
                node.log("key:  "+key);
                node.log("value:  "+value);
                if (key.startsWith('_')) {
                    const newKey = key.slice(1);
                    custom.push({ [newKey]: value || "" });
                } else if (key.startsWith('/')|| key === "" || key === null || key === undefined) {

                } else if (key.startsWith('B') && !isNaN(parseInt(key[1]))) {
                    const boardIndex = parseInt(key[1]) - 1;
                    if (!boards[boardIndex]) {
                        boards[boardIndex] = { ID: "B" + (boardIndex + 1), Barcode: '', Pass: 0, data: {} };
                    }
                    if(key=="B" + (boardIndex + 1)+".Barcode")
                    {
                        boards[boardIndex].Barcode = value || "" ;
                    }
                    if(key=="B" + (boardIndex + 1)+".Pass")
                    {
                        boards[boardIndex].Pass = value || "" ;
                    }
                }
                else {
                    result[key] = value || "";
                }
            });
            result["custom"] = custom;
            result["boards"] = boards;
            node.log(result.Detail1);
            node.log("boards: " + JSON.stringify(boards));

            //E:\lsd学习文件\文件资料\PTI-800系列\20210524153758.csv

            //把 result赋值给msg，并且输出
            msg.payload = result;
            node.send(msg);
        });
    }


    RED.nodes.registerType("pti816data", pti816dataNode);
}
